apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    api 'org.aspectj:aspectjrt:1.8.14'
}


apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

version = "1.1.0"
group = "com.github" //一般填你唯一的包名

def baseUrl = 'https://github.com/WDevaloper/android_permission'//todo 项目的主页
def gitUrl = baseUrl//todo Git仓库的url
def issueUrl = "${gitUrl}/issues"
def siteUrl = baseUrl


//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成文档
task javadoc(type: Javadoc) {
    excludes = ['**/*.kt'] // < ---- Exclude all kotlin files from javadoc file.
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    failOnError true
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

//上传到jcenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}


install {
    repositories {
        mavenInstaller {
            // This generates POM.xml with proper paramters
            pom.project {
                packaging 'aar'

                //添加项目描述
                name 'Permission for Android'
                url siteUrl
                //设置开源证书信息
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                //添加开发者信息
                developers {
                    developer {
                        id 'wangfayou'        //填写的一些基本信息
                        name 'wangfayou'
                        email 'coder.wangfayou@gmail.com'
                    }
                }

                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }

    }
}


def BINTRAY_USER = 'fayou'//todo your bintray user name   bintray的用户名,用户名不是组织名
def BINTRAY_APIKEY = 'a13bd2b94425edd2101f266c5d624ceb987b4ffb' //todo APIKEY

//配置上传Bintray相关信息
bintray {
    user = BINTRAY_USER
    key = BINTRAY_APIKEY
    configurations = ['archives']
    pkg {
        repo = 'AndroidPermission' //todo 上传到中央仓库的名称（重要，仓库名称 repository）
        name = 'android-permission-aop'
        //todo 上传到jcenter 的项目名称（bintray上的包名就是项目名）需要记住的是：在bintray创建包时version contrl 填github项目地址或者其他版本控制地址
        userOrg = 'develop-fayou'//todo 如果有组织就必须填写组织的名字，否则填写用户名称
        desc = 'androidPermission - A flexible, stable, easy-to-use Android Permission Library'
        // 项目描述
        websiteUrl = siteUrl
        issueTrackerUrl = issueUrl
        vcsUrl = gitUrl
        labels = ['android', 'permission']
        licenses = ['Apache-2.0']
        publish = true
    }
}
